{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"source/.nojekyll","path":".nojekyll","modified":0,"renderable":0},{"_id":"themes/next/source/images/violet.jpg","path":"images/violet.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/leveldb-globalview.md","hash":"b776ae698ac82d58267066849c63191b6a0e9a3a","modified":1597571082582},{"_id":"source/_posts/leveldb-rw.md","hash":"2e592d7eeb84374d11e238c56358f3f52dbcb2db","modified":1597571092006},{"_id":"source/_posts/leveldb-version.md","hash":"7e7c0011da9324463cb407d8a479099abe3ce271","modified":1597571097638},{"_id":"source/_posts/leveldb-table.md","hash":"3d644e177ff0f4b3473b991181ff2e8639d50abb","modified":1597571094726},{"_id":"source/tags/index.md","hash":"9ca35785b71d06475edc503f02e733c54b4452ec","modified":1597566702935},{"_id":"source/categories/index.md","hash":"10c94afa80a60c5a792547ef4807c1dd983ad316","modified":1597566640783},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1596330714824},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1596330714824},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1596330714824},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1596330714824},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1596330714824},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1596330714824},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1596330714824},{"_id":"themes/next/_config.yml","hash":"04720ec2a20b0fcf452f99fe59cd31e3619333ef","modified":1613106632399},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1596330714860},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1596330714824},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1596330714856},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1596330714824},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1596330714824},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1596330714824},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1596330714824},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1596330714824},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1596330714824},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1596330714824},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1596330714824},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1596330714824},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1596330714824},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1596330714824},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1596330714824},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1596330714824},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1596330714824},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1596330714824},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1596330714824},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1596330714824},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1596330714824},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1596330714824},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1596330714824},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1596330714824},{"_id":"themes/next/git-dir/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1596330714828},{"_id":"themes/next/git-dir/config","hash":"3aa58ad32c5b537b7b64d00c59cc2787e74a3fd2","modified":1596330714828},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1596330714856},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1596330714856},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1596330714856},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1596330714856},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1596330714856},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1596330714856},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1596330714856},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1596330714856},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1596330714856},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1596330714856},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1596330714856},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1596330714856},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1596330714856},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1596330714856},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1596330714856},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1596330714856},{"_id":"themes/next/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1596330714856},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1596330714856},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1596330714856},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1596330714856},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1596330714856},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1596330714856},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1596330714856},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1596330714860},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1596330714860},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1596330714860},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1596330714860},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1596330714860},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1596330714860},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1596330714860},{"_id":"themes/next/git-dir/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1596330714828},{"_id":"themes/next/git-dir/index","hash":"f59938676f797ca73c1836f23a9218a8895889c4","modified":1596330714828},{"_id":"themes/next/git-dir/packed-refs","hash":"47e926b6e38c0acd65869260264e7b82f9d54005","modified":1596330714856},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1596330714824},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1596330714824},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1596330714824},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1596330714828},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1596330714828},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1596330714828},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1596330714828},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1596330714828},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1596330714828},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1596330714828},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1596330714828},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1596330714828},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1596330714824},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1596330714824},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1596330714828},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1596330714828},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1596330714828},{"_id":"themes/next/git-dir/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1596330714828},{"_id":"themes/next/git-dir/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1596330714828},{"_id":"themes/next/git-dir/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1596330714828},{"_id":"themes/next/git-dir/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1596330714828},{"_id":"themes/next/git-dir/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1596330714828},{"_id":"themes/next/git-dir/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1596330714828},{"_id":"themes/next/git-dir/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1596330714828},{"_id":"themes/next/git-dir/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1596330714828},{"_id":"themes/next/git-dir/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1596330714828},{"_id":"themes/next/git-dir/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1596330714828},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1596330714856},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1596330714856},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1596330714856},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1596330714856},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1613105324427},{"_id":"themes/next/git-dir/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1596330714828},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1596330714856},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1596330714856},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1596330714856},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1596330714856},{"_id":"themes/next/git-dir/logs/HEAD","hash":"7db60f4bf7e10ecab7ca33f80812f27922107aba","modified":1596330714828},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1596330714856},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1596330714856},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1596330714856},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1596330714856},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1596330714860},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1596330714860},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1596330714860},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1596330714860},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1596330714860},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1596330714860},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1596330714860},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1596330714860},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1596330714860},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1596330714860},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1596330714860},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1596330714860},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1596330714856},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1596330714860},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1596330714860},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1596330714860},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1596330714860},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1596330714860},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1596330714860},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1596330714860},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1596330714860},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1596330714860},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1596330714860},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1596330714860},{"_id":"themes/next/git-dir/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1596330714828},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1596330714864},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1596330714860},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1596330714864},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1596330714864},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1596330714864},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1596330714864},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1596330714864},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1596330714864},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1596330714864},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1596330714864},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1596330714864},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1596330714864},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1596330714864},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1596330714864},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1596330714864},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1596330714864},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1596330714864},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1596330714864},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1596330714864},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1596330714864},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1596330714864},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1613105324439},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1596330714864},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1596330714856},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1596330714856},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1596330714856},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1596330714856},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1596330714856},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1596330714856},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1596330714856},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1596330714856},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1596330714856},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1596330714856},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1596330714856},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1596330714856},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1596330714856},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1596330714856},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1596330714856},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1596330714856},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1596330714856},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1596330714856},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1596330714856},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1596330714856},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1596330714856},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1596330714856},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1596330714856},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1596330714856},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1596330714856},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1596330714856},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1596330714856},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1596330714856},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1596330714856},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1596330714856},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1596330714856},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1596330714856},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1596330714856},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1596330714860},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1596330714860},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1596330714860},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1596330714860},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1596330714860},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1596330714860},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1596330714860},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1596330714860},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1596330714860},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1596330714860},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1596330714860},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1596330714860},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1596330714860},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1596330714860},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1596330714860},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1596330714860},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1596330714860},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1596330714860},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1596330714860},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1596330714860},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1596330714860},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1596330714860},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1596330714860},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1596330714860},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1596330714860},{"_id":"themes/next/git-dir/refs/heads/master","hash":"7b5894d5fc28d7797285dac4f43134462f6c7c5d","modified":1596330714856},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1596330714864},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1596330714864},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1596330714864},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1596330714864},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1596330714864},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1596330714864},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1596330714864},{"_id":"themes/next/source/lib/three/.gitignore","hash":"e691fe9e685cbd50bcd7e138f4ca3503e7b0eaa4","modified":1597570474267},{"_id":"themes/next/source/lib/three/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1597570474267},{"_id":"themes/next/source/lib/three/README.md","hash":"1e31051ce404eaa86df192b7000442bacd31e2b4","modified":1597570474267},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"ae6584edc0418d68731cab82c1494f26bd77c07d","modified":1597570474267},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"186c3bd6ae352d336cdbd0e555ee76a844854c94","modified":1597570474267},{"_id":"themes/next/source/lib/three/gulpfile.js","hash":"e0e9e7051d9d82a37c2aba1df396d8b3916323c4","modified":1597570474271},{"_id":"themes/next/source/lib/three/package.json","hash":"af5089f910e1041b316def5512a23443f0ffaadc","modified":1597570474271},{"_id":"themes/next/source/lib/three/renovate.json","hash":"cb29cc16e61b0b8a6dac34657d76822ae29ad5aa","modified":1597570474271},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"329483be97cdda030779da9a6cd1e3eae645cf4f","modified":1597570474271},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1596330714868},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1596330714868},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1596330714864},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1596330714864},{"_id":"themes/next/git-dir/logs/refs/heads/master","hash":"7db60f4bf7e10ecab7ca33f80812f27922107aba","modified":1596330714828},{"_id":"themes/next/git-dir/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1596330714856},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1596330714860},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1596330714864},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1596330714864},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1596330714868},{"_id":"themes/next/source/lib/three/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1597570474243},{"_id":"themes/next/source/lib/three/.git/config","hash":"250a00782b562964ece19407742221ae24e56aac","modified":1597570474243},{"_id":"themes/next/source/lib/three/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1597570470263},{"_id":"themes/next/source/lib/three/.git/packed-refs","hash":"51439496ae6791f8b002584e71f5d10f4f1a1f71","modified":1597570474243},{"_id":"themes/next/source/lib/three/.git/index","hash":"c6bcae47b84f41a88c2c742ec9d499af8bc7ec11","modified":1597570474283},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1596330714868},{"_id":"themes/next/source/lib/three/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1597570474267},{"_id":"themes/next/source/lib/three/src/canvas_sphere.js","hash":"7614790c67d3e79e3390fe688f6b01afad7e3bb1","modified":1597570474271},{"_id":"themes/next/source/lib/three/lib/CanvasRenderer.js","hash":"cf8e1ce6e884023ad0d692cf30f399862407fb40","modified":1597570474271},{"_id":"themes/next/source/lib/three/lib/Projector.js","hash":"1ad16e96cea2a8a9155bb429c83ef9bdd341ce99","modified":1597570474271},{"_id":"themes/next/source/lib/three/src/canvas_lines.js","hash":"650310ff6783671f8ceccf01f840b20d9c87b491","modified":1597570474271},{"_id":"themes/next/source/lib/three/src/three-waves.js","hash":"e98e442f14920e9fb8691846dca3a2225d403048","modified":1597570474271},{"_id":"themes/next/git-dir/logs/refs/remotes/origin/HEAD","hash":"7db60f4bf7e10ecab7ca33f80812f27922107aba","modified":1596330714828},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1596330714860},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1596330714860},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1596330714860},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1596330714860},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1596330714860},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1596330714860},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1596330714860},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1596330714864},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1596330714864},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1596330714864},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1596330714864},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1596330714864},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1596330714864},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1596330714864},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1596330714864},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1596330714864},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1596330714864},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1596330714860},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1596330714864},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1596330714860},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1596330714860},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1596330714864},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1596330714864},{"_id":"themes/next/source/lib/three/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1597570470263},{"_id":"themes/next/source/lib/three/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1597570470263},{"_id":"themes/next/source/lib/three/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1597570470263},{"_id":"themes/next/source/lib/three/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1597570470263},{"_id":"themes/next/source/lib/three/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1597570470263},{"_id":"themes/next/source/lib/three/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1597570470263},{"_id":"themes/next/source/lib/three/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1597570470263},{"_id":"themes/next/source/lib/three/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1597570470263},{"_id":"themes/next/source/lib/three/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1597570470263},{"_id":"themes/next/source/lib/three/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1597570470263},{"_id":"themes/next/source/lib/three/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1597570470263},{"_id":"themes/next/source/lib/three/.git/logs/HEAD","hash":"1d146f6eca82b163cb87c20eed74b10873d197d4","modified":1597570474243},{"_id":"themes/next/source/lib/three/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1597570470263},{"_id":"themes/next/source/lib/three/.git/objects/09/3d290f60c3b467d503633531d7ce7cdd42dd75","hash":"ab09bc8bfc9079e408dc6facc1bfd9aa5d6bdef9","modified":1597570474231},{"_id":"themes/next/source/lib/three/.git/objects/03/c40a4b50e21c63a0e27b1fbcd014168ae3f6da","hash":"987ca2a1169e875a5ac73e8a1a906b9ae88d4d22","modified":1597570472727},{"_id":"themes/next/source/lib/three/.git/objects/03/eb19e6b3194a820c462bc63177b6fc2bda245f","hash":"0be88820832fa6ea30d56905e98b27798805dc92","modified":1597570472843},{"_id":"themes/next/source/lib/three/.git/objects/0b/de10292fcd5dd4b66d1bf60f62ea7d7a30b310","hash":"37710386189fe435ea20541a69c1a9b833b5f50b","modified":1597570472847},{"_id":"themes/next/source/lib/three/.git/objects/0e/f76c758387d59ca0221cd50564e9edf7080c99","hash":"874d6d28ce21ce2873016183dd9e22b91f71c750","modified":1597570472731},{"_id":"themes/next/source/lib/three/.git/objects/19/65ef0ba0e2c1ad938cffdcbebed63048751ac6","hash":"75921c60b65a5606a85ab5cec185f430d844048d","modified":1597570472855},{"_id":"themes/next/source/lib/three/.git/objects/15/e42465bbd9589d2112d7fe3328bd7f85c6b24f","hash":"c28f5e24b9b15ecfddd666711c6d6ef57317cb29","modified":1597570472711},{"_id":"themes/next/source/lib/three/.git/objects/1a/f9d30697fd2194a4132a3a6647722be2eb75dc","hash":"0f686b4e26b1e751509ded8a2db697b1d7938004","modified":1597570472715},{"_id":"themes/next/source/lib/three/.git/objects/1b/3d1cd16f3e6ce99ea92c7e9c0b78ee30a8c346","hash":"16569e1c4912fd762f32b13de839d05b9c319e54","modified":1597570472715},{"_id":"themes/next/source/lib/three/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1597570472719},{"_id":"themes/next/source/lib/three/.git/objects/1f/0b95a965630f47a7264fe9e9456ed7da36c2aa","hash":"6e98b6d7740bf53074339ce383089320fe1962b9","modified":1597570474207},{"_id":"themes/next/source/lib/three/.git/objects/1f/354734edae8d1fa1af07d20573698512589c4e","hash":"9f1bb3baf74e25329b553704be0a3c64e194df8c","modified":1597570472711},{"_id":"themes/next/source/lib/three/.git/objects/21/cbdd0d76bb18019bcb47aeec029fb13e211b09","hash":"c4466a47cecee06641b74dca59ed92665c24a5d7","modified":1597570473971},{"_id":"themes/next/source/lib/three/.git/objects/21/77c1416c8e91ed918b6d3cf7f333d99d659a24","hash":"7330016805a652c2153bfcfbdd4c3c50e5b5a642","modified":1597570474231},{"_id":"themes/next/source/lib/three/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1597570472719},{"_id":"themes/next/source/lib/three/.git/objects/29/4f11136ee13277ee96ec3bb56d810f43655298","hash":"a294c3770aa5e7ed386075202f5b88048e1d170d","modified":1597570474231},{"_id":"themes/next/source/lib/three/.git/objects/34/cbb2a80da03e4d233dcfa3f11fed64894b2de5","hash":"ddf0c1fdb72ed14c50b1d1718a122f5f2a38a3ed","modified":1597570472847},{"_id":"themes/next/source/lib/three/.git/objects/36/3db3ce197d25b8c64db663aa9000a181511461","hash":"f87bc2ce87e37d0ee60eceef8be89dae4c52e01d","modified":1597570472739},{"_id":"themes/next/source/lib/three/.git/objects/3a/cef7449b991ee78bb5b7f2f121996b9ec9bba4","hash":"d9165d5939be17750b9edad5d0fc32029e4a23d6","modified":1597570472847},{"_id":"themes/next/source/lib/three/.git/objects/3a/4c8581b3aa0d4f9192de158bd4223a90d646b5","hash":"a64efe9f8e2db0ff3cfb7b5e71fedf229ce290fd","modified":1597570472719},{"_id":"themes/next/source/lib/three/.git/objects/3a/ae52073909b7ccdbd43538ee6c814691935c57","hash":"652619b1d76f267c1646b6167de80f58a520525e","modified":1597570472851},{"_id":"themes/next/source/lib/three/.git/objects/3c/6fef4314903036253335d4550346f6b927c721","hash":"1ee4e7d110363dc5e2676b675c7f7030731cf3a5","modified":1597570474223},{"_id":"themes/next/source/lib/three/.git/objects/42/d67e32b0d5f676f7462ad5b013f4eb8cad2486","hash":"fb1c4d377401f2145cc721d96fdf40d89ac23434","modified":1597570472739},{"_id":"themes/next/source/lib/three/.git/objects/3e/4151e56ef50d7ff46a1ce73156c35ac6f1224d","hash":"a47d2e1895903aa7e1b51d35731f212ffc6a1718","modified":1597570472711},{"_id":"themes/next/source/lib/three/.git/objects/3f/f2616b188ab71e1abf2029d7d55834c5643fc5","hash":"65bbc360ee3cc66fba71b9fb0baa3cff744327b9","modified":1597570473975},{"_id":"themes/next/source/lib/three/.git/objects/4f/f48fd861ac49dd98ce52052bf6214f0a91facf","hash":"ae4d7b9a38e8913c055d37a6f129378d089bfd65","modified":1597570472723},{"_id":"themes/next/source/lib/three/.git/objects/52/71f18c203d24b27ec7bd977c2d5c61300cea1a","hash":"cdae53ba376df246585a2f44a86d0c7da98bca1f","modified":1597570474219},{"_id":"themes/next/source/lib/three/.git/objects/53/c865f8ff0aaa7ae2c8da7324dce73756ffe7c0","hash":"2d1c2dcfa342f46910a5698023b2c208bf3336e0","modified":1597570472731},{"_id":"themes/next/source/lib/three/.git/objects/64/d845d3aed3dce9eab9de39793f1c4d1d6e0deb","hash":"1c7346386e8c3d8830bf36bff7011976ba326b3e","modified":1597570472735},{"_id":"themes/next/source/lib/three/.git/objects/67/6b9f6189356d0201fd72dd6f98db19628a2ff5","hash":"250795ea0af79524945e66b28f233eb8bd9ee7dd","modified":1597570474215},{"_id":"themes/next/source/lib/three/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1597570472723},{"_id":"themes/next/source/lib/three/.git/objects/6e/a4473e91dc2dbc452ff446e7cb04cb2ff16da0","hash":"710066cce498e372a932ff272d3d0eb4345fe3cf","modified":1597570472715},{"_id":"themes/next/source/lib/three/.git/objects/6b/128053933889f264c239abe0d381523daa8fa5","hash":"23df1e6daed83528bc2f36980678ecc31e17f09e","modified":1597570472843},{"_id":"themes/next/source/lib/three/.git/objects/6f/f9f6347d48d4bc18b07a813f9140d7287df7aa","hash":"46232e003a90f98c78af21c4898ab37c66fda385","modified":1597570473971},{"_id":"themes/next/source/lib/three/.git/objects/70/0960a662785b70b5c72909810794e1c18e9891","hash":"ea3c3330dd0a213a3cebdc42ee57d43fb8f9813c","modified":1597570474207},{"_id":"themes/next/source/lib/three/.git/objects/79/ae5f64ea4be7e1a108b2f1fc8afbca7bfa1fba","hash":"4e28517d80599b1a6051b1d3f657654aca6333b9","modified":1597570472723},{"_id":"themes/next/source/lib/three/.git/objects/7b/a927a3390f9a6345039cdb5bc54c6a54297f69","hash":"0d10f821d9e61a27c3f9d9e03e923265693d68ab","modified":1597570473971},{"_id":"themes/next/source/lib/three/.git/objects/7d/d7c1e8f79dc9a9a99e290147528d7a47d46830","hash":"c2104c89bcf686b243061b456ddc86d916b84360","modified":1597570472851},{"_id":"themes/next/source/lib/three/.git/objects/7d/2bcbb026e4a38ab45317d8b78bfed70ba25c51","hash":"05394b260c2c58ee38b7224bb4ecb52df1e7f354","modified":1597570473975},{"_id":"themes/next/source/lib/three/.git/objects/80/5e5d92b903742c45e359b26a06cf86376301d8","hash":"6d39f5d10ed1e3acaaef5ac5999945b65ab12b88","modified":1597570474207},{"_id":"themes/next/source/lib/three/.git/objects/7f/6a7ddb8a04644dc980d83c9878b4621acf82f5","hash":"c517caf5d47c9f1eba2ced6800dab03e2e29a130","modified":1597570472719},{"_id":"themes/next/source/lib/three/.git/objects/81/d7d11db23df8681d1a8242fb27252a9d2d7062","hash":"a294b374bb129cc8aaec9c01bf1df1c5addafe9d","modified":1597570472711},{"_id":"themes/next/source/lib/three/.git/objects/82/69b6fd29a514f9bd746497b298176228bd4061","hash":"cf527c08b5d88d72939a61446d128eba2fb94be2","modified":1597570474211},{"_id":"themes/next/source/lib/three/.git/objects/87/782e1008d1f88a9cb63d59407b1cb9e47b0861","hash":"0af5c5e17b27d8114fddd53d7cae8bb3284ae9af","modified":1597570472715},{"_id":"themes/next/source/lib/three/.git/objects/8a/2159d7a0c70d394071e8dcc79502d5cd1fc5e4","hash":"58ff19b7a9a65c9e562b9e1c7ee0ed3ac005b15d","modified":1597570474227},{"_id":"themes/next/source/lib/three/.git/objects/8e/3ea1a067348d2a9c066fbf201663b462a3ed6c","hash":"f3168176590ac08570ef75b73ecae2b4a455d753","modified":1597570472739},{"_id":"themes/next/source/lib/three/.git/objects/8e/985e4c70f87248ecc33d93410d80d1632c552f","hash":"a1d2084dd43e026f1b93027221629f5cbb135c88","modified":1597570472719},{"_id":"themes/next/source/lib/three/.git/objects/90/e94cbdbfd33fea8606d447d01011ff657478f1","hash":"df922aee3bc7eb3266134797efb6f888743c6a12","modified":1597570472735},{"_id":"themes/next/source/lib/three/.git/objects/9d/b082c6081a7d8b8b752bc35ebcba85073f5fac","hash":"c240b76ccdb8552d6d4c75e55d5c4c93807756af","modified":1597570472711},{"_id":"themes/next/source/lib/three/.git/objects/94/1060002b98395a31cb47a33166f5568a20d4b5","hash":"c345981cd6097743cbb6f44d61b33ed37b110b31","modified":1597570472711},{"_id":"themes/next/source/lib/three/.git/objects/89/b7ae569312ae577534d7b58647232fb48bfb08","hash":"a265c0a7e24267bd82d11a48f091d2241edc0080","modified":1597570474231},{"_id":"themes/next/source/lib/three/.git/objects/a4/6866ca175f7c27daaf6b39c94d930bc27d4ce5","hash":"fc416f7f3f62c338bda28bb56bfa6f8fb49421ff","modified":1597570474207},{"_id":"themes/next/source/lib/three/.git/objects/b0/2d36d33210bc68d3e6451c663eb567ebc5721c","hash":"8d3bac2fa021a8f4609a134167edb84fd46254b2","modified":1597570472735},{"_id":"themes/next/source/lib/three/.git/objects/c3/e49d5369de034ff0788d11519bd9150b67ce74","hash":"256a3f0a7054a3e2cde1fc58f027565c87ad3d1b","modified":1597570472723},{"_id":"themes/next/source/lib/three/.git/objects/a9/27aca23c7f27f5d1ebf2c4baea3aa5d8676143","hash":"dc3e5c853a502fbe7ea3e35c2f7a2bf94318ade4","modified":1597570472715},{"_id":"themes/next/source/lib/three/.git/objects/bc/e19792442b36a0560e50adf61e86ef7ecbb50a","hash":"10f1b5f7fc7fd8b01ea9c5a5d1efad0464dd03ca","modified":1597570472719},{"_id":"themes/next/source/lib/three/.git/objects/d0/32ce3fe05be57b72cc925f86149497229cda13","hash":"59e5036e95b496852ad3b918eac2e4b28a5951f2","modified":1597570474231},{"_id":"themes/next/source/lib/three/.git/objects/ae/8fa980e909988af2ebd9423658213d2e7e6bba","hash":"9978e4f223de97e23a047986bf21cbf48663a150","modified":1597570472715},{"_id":"themes/next/source/lib/three/.git/objects/ce/175226253f7f31da632b93ab6560debab1bf6d","hash":"55c41b0948cb31fad3a52ab7ac91ba93e6c22751","modified":1597570472715},{"_id":"themes/next/source/lib/three/.git/objects/d2/a00ca1067b93b81dae8ea7d0c9838e935595e8","hash":"4b1ecd5271cdf94c10c2e413c7378adb22e940bb","modified":1597570474231},{"_id":"themes/next/source/lib/three/.git/objects/d8/8d5765694f92039daac0f944405d4cf61a0d13","hash":"70d2b236fcd955aa4fa95efc2e18c98919003ec6","modified":1597570473971},{"_id":"themes/next/source/lib/three/.git/objects/d9/0026fb76d55bba50ee4a221c887a0f1a8e8102","hash":"ac0ac5756be4b24f2249be101665ff29ed93d1f9","modified":1597570474227},{"_id":"themes/next/source/lib/three/.git/objects/d9/90e2654ec49768cd50d630db99ee00bee2b13c","hash":"6c5cc041391cb5a6b3e0f2f15f30bd62735ac7fa","modified":1597570472847},{"_id":"themes/next/source/lib/three/.git/objects/df/932438893faefc6b9f5ba9191913dfeedc2a1c","hash":"ac939ae39ab04abc99c0caaef00849585ff4886d","modified":1597570474231},{"_id":"themes/next/source/lib/three/.git/objects/db/fc5bb53f0ee561f55b18c9796e1e03a9781153","hash":"3cda0d28ce918db5b722db817e69ea522a4db9ce","modified":1597570472711},{"_id":"themes/next/source/lib/three/.git/objects/e0/52c7542703df4969a95779bd4dc58b568bcb5e","hash":"b1ccf1650011f74939f07233834bdff21baf4952","modified":1597570472719},{"_id":"themes/next/source/lib/three/.git/objects/e0/ced7e71c43a729f9653b1c4434b95724fc02ed","hash":"98c61b57d8e5e03cf30d402cfcb840c6e610aaa6","modified":1597570474219},{"_id":"themes/next/source/lib/three/.git/objects/e5/6e96bd99ebe3f0dc8f02c979703c3666f6dd9e","hash":"b971fcaae8424ea1b507379afdcdff74359a1525","modified":1597570474231},{"_id":"themes/next/source/lib/three/.git/objects/ea/7a1bbd08eb930b5f777ec025493ae0c8cb12d4","hash":"3c428fd65f982afbabbf683163bcc88a4eb4cda0","modified":1597570472715},{"_id":"themes/next/source/lib/three/.git/objects/ec/00e107b97a0b7a9850219894bf4e533c68bf87","hash":"5b7f94788c3c19c8a0f73f1b712d5d79e0236668","modified":1597570472843},{"_id":"themes/next/source/lib/three/.git/objects/ef/45fc381ccdb38fd03bb02c4e761d08275049c2","hash":"2eb89702aa19a302e38aff842b6ad1e22c3fbb93","modified":1597570472847},{"_id":"themes/next/source/lib/three/.git/objects/f4/5d8f110c3034162a1091dafe4b03d2e56b323e","hash":"963dad8248030a8d7b185f4726e40a65a0583c0e","modified":1597570472847},{"_id":"themes/next/source/lib/three/.git/objects/fa/be1d6949c228188d07df0f4b99b217c7b7f92e","hash":"de53b76740aff0953bcd79853d8addfabfc29f95","modified":1597570473975},{"_id":"themes/next/source/lib/three/.git/objects/fe/47fa8f2d9edef52a8ea859537c9286363ee168","hash":"dfaa57c592a229b220a7241bbd0567ec38f4e578","modified":1597570473979},{"_id":"themes/next/source/lib/three/.git/refs/heads/master","hash":"dcb9d54aa64c8a682ca5ca209370022b8a8dc843","modified":1597570474243},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1596330714856},{"_id":"themes/next/source/lib/three/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1597570474243},{"_id":"themes/next/source/images/violet.jpg","hash":"3516d364cad168de220db169bf12b3f49b504d51","modified":1597569019512},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1596330714868},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1596330714868},{"_id":"themes/next/source/lib/three/.git/logs/refs/heads/master","hash":"1d146f6eca82b163cb87c20eed74b10873d197d4","modified":1597570474243},{"_id":"themes/next/source/lib/three/.git/logs/refs/remotes/origin/HEAD","hash":"1d146f6eca82b163cb87c20eed74b10873d197d4","modified":1597570474243},{"_id":"themes/next/source/lib/three/.git/objects/76/310b5a7e93e66e7d98aaab2960d6354b2288c5","hash":"84de52193b47c83d01eb8800b063ccd83ad42cf9","modified":1597570473875},{"_id":"themes/next/git-dir/objects/pack/pack-d8d8db057db8f46d96aedfa896aedf456f1ce299.idx","hash":"3e2aa9779734ab3bb8e2b7e4165094b87bae2c68","modified":1596330714828},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1597570474283},{"_id":"themes/next/git-dir/objects/pack/pack-d8d8db057db8f46d96aedfa896aedf456f1ce299.pack","hash":"c2432e3113278a73c5a676bb0e130f8cf3fa0018","modified":1596330714852},{"_id":"public/categories/index.html","hash":"e57f81f6411ad48ba2d67b4c5d1e1d745b1f54fb","modified":1597849240068},{"_id":"public/tags/index.html","hash":"a1cd1e0d1fddf44152df8e386fb6245db0a7c52d","modified":1597849240068},{"_id":"public/archives/index.html","hash":"635d8905829af7b8289a44e1859a1d23f630a7c8","modified":1597849240068},{"_id":"public/archives/2020/index.html","hash":"623a22137de1772a7bfe1b10d60de3f0d858333e","modified":1597849240068},{"_id":"public/archives/2020/08/index.html","hash":"cc04d44bfb7e6c1a2faf51a41b88f03568ec4337","modified":1597849240068},{"_id":"public/categories/leveldb/index.html","hash":"9fb7d0d2dbf53b26b98342584c1621ce6d60c479","modified":1597849240068},{"_id":"public/tags/leveldb/index.html","hash":"edd6837f57e6bb9b4208528031cde8dde230a442","modified":1597849240068},{"_id":"public/2020/08/16/leveldb-version/index.html","hash":"d36ff87413104ae9708a9043cac3c5577539e2d6","modified":1597849240068},{"_id":"public/2020/08/16/leveldb-table/index.html","hash":"d1de7acfa6f9f857facd65e717ebe07d1408bccd","modified":1597849240068},{"_id":"public/2020/08/16/leveldb-rw/index.html","hash":"9b06bf80aa15633a32648cc786d943d47c7fff0b","modified":1597849240068},{"_id":"public/2020/08/16/leveldb-globalview/index.html","hash":"cba063a4d951eb1109de390ab62ccc2fc6d28603","modified":1597849240068},{"_id":"public/index.html","hash":"cef2e629aea9049432adc98e13a6431a039ea22c","modified":1597849240068},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1597849240068},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1597849240068},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1597849240068},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1597849240068},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1597849240068},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1597849240068},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1597849240068},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1597849240068},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1597849240068},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1597849240068},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1597849240068},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1597849240068},{"_id":"public/lib/three/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1597849240068},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1597849240068},{"_id":"public/images/violet.jpg","hash":"3516d364cad168de220db169bf12b3f49b504d51","modified":1597849240068},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1597849240068},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1597849240068},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1597849240068},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1597849240068},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1597849240068},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1597849240068},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1597849240068},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1597849240068},{"_id":"public/js/utils.js","hash":"2c6e6b4d9a592fbb4bf04689524db2cdfcd94ca7","modified":1597849240068},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1597849240068},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1597849240068},{"_id":"public/lib/three/README.html","hash":"2eb166c7b8400151729974fd196478bd4579ff03","modified":1597849240068},{"_id":"public/lib/three/gulpfile.js","hash":"e0e9e7051d9d82a37c2aba1df396d8b3916323c4","modified":1597849240068},{"_id":"public/lib/three/package.json","hash":"3e6a0c56ec47a38c0bf7b404f6e46965ec7d2e3d","modified":1597849240068},{"_id":"public/lib/three/renovate.json","hash":"94990e0ad04ce4a7c6f0ac3543318d9e02db1264","modified":1597849240068},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1597849240068},{"_id":"public/lib/three/src/canvas_lines.js","hash":"650310ff6783671f8ceccf01f840b20d9c87b491","modified":1597849240068},{"_id":"public/lib/three/src/canvas_sphere.js","hash":"7614790c67d3e79e3390fe688f6b01afad7e3bb1","modified":1597849240068},{"_id":"public/lib/three/src/three-waves.js","hash":"e98e442f14920e9fb8691846dca3a2225d403048","modified":1597849240068},{"_id":"public/css/main.css","hash":"cbc5e5bfb39c12b02b0953ff033cef7b232f6e8f","modified":1597849240068},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1597849240068},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"186c3bd6ae352d336cdbd0e555ee76a844854c94","modified":1597849240068},{"_id":"public/lib/three/canvas_lines.min.js","hash":"ae6584edc0418d68731cab82c1494f26bd77c07d","modified":1597849240068},{"_id":"public/lib/three/three-waves.min.js","hash":"329483be97cdda030779da9a6cd1e3eae645cf4f","modified":1597849240068},{"_id":"public/lib/three/lib/CanvasRenderer.js","hash":"cf8e1ce6e884023ad0d692cf30f399862407fb40","modified":1597849240068},{"_id":"public/lib/three/lib/Projector.js","hash":"1ad16e96cea2a8a9155bb429c83ef9bdd341ce99","modified":1597849240068},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1597849240068},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1597849240068},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1597849240068},{"_id":"source/.nojekyll","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1613105713097},{"_id":"themes/next/._config.yml.swp","hash":"16be8de3373ac59f238e86aefaaef78d09cfb731","modified":1613106201618}],"Category":[{"name":"leveldb","_id":"cke1i6ki9000454kgf4ge50e2"}],"Data":[],"Page":[{"title":"categories","date":"2020-08-16T08:30:13.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-08-16 16:30:13\ntype: categories\n---\n","updated":"2020-08-16T08:30:40.783Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cke1i6ki0000054kg0glk0jdk","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-08-16T08:31:34.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-08-16 16:31:34\ntype: tags\n---\n","updated":"2020-08-16T08:31:42.935Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cke1i6ki7000254kgdsuw1fyl","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"leveldb 概述(一)","toc":true,"date":"2020-08-16T09:44:42.000Z","_content":"\n\n# 概述\n\n写在前面，优秀的leveldb分析已经很多了，想要看梗概的人可以直接看[庖丁解LevelDB](https://catkang.github.io/2017/01/07/leveldb-summary.html)这个系列的文章。\n\n花了一周时间把leveldb的所有代码逐行解析了一遍，除了那些test文件，可累死我了，大多数文件只有不到300行还行，`db_impl.cc` 和`version_set.cc`这两个1500行的文件最累，虽说文件函数逻辑清晰，但自己写的时候还是避免这种过长的文件吧，前后联系看到时候特别累，当然比起ceph的bluestore单个文件1w多行而言仍算是小巫见大巫了，这个留作下次分析。这个level系列的几个blog主要是对之前详细分析的一个总结，并不会在这里逐行解析，也没这个必要，leveldb的精髓是其主要思想，而不是里面的辅助函数，如env_posix层。代码总有效行数，从`cloc`来看，大概在17000行左右，分析的路线从和用户最相关的地方开始，也就是读写，然后引出读写中牵涉的部分，如wal，memtable，table，block，cache，之后讨论version以及compaction，最后通过dbimpl进行总结。\n<!--more-->\n\n# 缺点\n\n在分析开始之前，先谈一下缺点，再好的项目，也只能在其特定的应用场景大放光彩。\n\n## sdd\n\nleveldb的设计包括其基于的LSM的存储结构，完全是为了优化机械硬盘存储而生的,尽可能避免随机写，读也是以block为单位进行读取并缓存的(默认4k，这个包括其他option都在`option.h`中进行调整),compact的时机选取和估算都是以hdd的磁盘寻道延迟为考量的，也没有考虑过利用ssd随机存取的特性，所以如果以sdd为存储介质，并不是很推荐使用leveldb。\n\n## 写放大\n\n写入可能会造成compaction，也就是一次的写入可能会造成后台读入十多个文件，然后在内存中进行合并操作并输出到某几个文件，具体的写放大没有算过，但是对于kv尺寸比较大的数据业务而言，compact的触发会比较频繁，即使调高memtable容量或者加大单个文件容量，也会在compaction时造成很大的延迟, 可以查到的改进策略主要是kv分开存储，key走lsm，value走wal，[如这篇论文](https://www.usenix.org/system/files/conference/fast16/fast16-papers-lu.pdf), 优点是减少写放大，缺点的话应该是value的gc处理可能会引起较多的读写惩罚了。据说rocksdb对ssd是有优化的，ceph默认的bluefs使用的也是rocksdb，下次研究一下它是如何改进的。\n\n## 缺点总结\n\n不过总的来说，在ssd，nvme，甚至是pmem大行其道的今天，以及未来，我相信随机读写的开销会越来越小，以至于为高性能而生的LSM的这种化随机为顺序的存储模式将会成为一种过去。\n","source":"_posts/leveldb-globalview.md","raw":"---\ntitle: leveldb 概述(一)\ntags:\n  - leveldb\ntoc: true\ncategories:\n  - leveldb\ndate: 2020-08-16 17:44:42\n---\n\n\n# 概述\n\n写在前面，优秀的leveldb分析已经很多了，想要看梗概的人可以直接看[庖丁解LevelDB](https://catkang.github.io/2017/01/07/leveldb-summary.html)这个系列的文章。\n\n花了一周时间把leveldb的所有代码逐行解析了一遍，除了那些test文件，可累死我了，大多数文件只有不到300行还行，`db_impl.cc` 和`version_set.cc`这两个1500行的文件最累，虽说文件函数逻辑清晰，但自己写的时候还是避免这种过长的文件吧，前后联系看到时候特别累，当然比起ceph的bluestore单个文件1w多行而言仍算是小巫见大巫了，这个留作下次分析。这个level系列的几个blog主要是对之前详细分析的一个总结，并不会在这里逐行解析，也没这个必要，leveldb的精髓是其主要思想，而不是里面的辅助函数，如env_posix层。代码总有效行数，从`cloc`来看，大概在17000行左右，分析的路线从和用户最相关的地方开始，也就是读写，然后引出读写中牵涉的部分，如wal，memtable，table，block，cache，之后讨论version以及compaction，最后通过dbimpl进行总结。\n<!--more-->\n\n# 缺点\n\n在分析开始之前，先谈一下缺点，再好的项目，也只能在其特定的应用场景大放光彩。\n\n## sdd\n\nleveldb的设计包括其基于的LSM的存储结构，完全是为了优化机械硬盘存储而生的,尽可能避免随机写，读也是以block为单位进行读取并缓存的(默认4k，这个包括其他option都在`option.h`中进行调整),compact的时机选取和估算都是以hdd的磁盘寻道延迟为考量的，也没有考虑过利用ssd随机存取的特性，所以如果以sdd为存储介质，并不是很推荐使用leveldb。\n\n## 写放大\n\n写入可能会造成compaction，也就是一次的写入可能会造成后台读入十多个文件，然后在内存中进行合并操作并输出到某几个文件，具体的写放大没有算过，但是对于kv尺寸比较大的数据业务而言，compact的触发会比较频繁，即使调高memtable容量或者加大单个文件容量，也会在compaction时造成很大的延迟, 可以查到的改进策略主要是kv分开存储，key走lsm，value走wal，[如这篇论文](https://www.usenix.org/system/files/conference/fast16/fast16-papers-lu.pdf), 优点是减少写放大，缺点的话应该是value的gc处理可能会引起较多的读写惩罚了。据说rocksdb对ssd是有优化的，ceph默认的bluefs使用的也是rocksdb，下次研究一下它是如何改进的。\n\n## 缺点总结\n\n不过总的来说，在ssd，nvme，甚至是pmem大行其道的今天，以及未来，我相信随机读写的开销会越来越小，以至于为高性能而生的LSM的这种化随机为顺序的存储模式将会成为一种过去。\n","slug":"leveldb-globalview","published":1,"updated":"2020-08-16T09:44:42.582Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke1i6ki4000154kg085k87x1","content":"<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>写在前面，优秀的leveldb分析已经很多了，想要看梗概的人可以直接看<a href=\"https://catkang.github.io/2017/01/07/leveldb-summary.html\">庖丁解LevelDB</a>这个系列的文章。</p>\n<p>花了一周时间把leveldb的所有代码逐行解析了一遍，除了那些test文件，可累死我了，大多数文件只有不到300行还行，<code>db_impl.cc</code> 和<code>version_set.cc</code>这两个1500行的文件最累，虽说文件函数逻辑清晰，但自己写的时候还是避免这种过长的文件吧，前后联系看到时候特别累，当然比起ceph的bluestore单个文件1w多行而言仍算是小巫见大巫了，这个留作下次分析。这个level系列的几个blog主要是对之前详细分析的一个总结，并不会在这里逐行解析，也没这个必要，leveldb的精髓是其主要思想，而不是里面的辅助函数，如env_posix层。代码总有效行数，从<code>cloc</code>来看，大概在17000行左右，分析的路线从和用户最相关的地方开始，也就是读写，然后引出读写中牵涉的部分，如wal，memtable，table，block，cache，之后讨论version以及compaction，最后通过dbimpl进行总结。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h1><p>在分析开始之前，先谈一下缺点，再好的项目，也只能在其特定的应用场景大放光彩。</p>\n<h2 id=\"sdd\"><a href=\"#sdd\" class=\"headerlink\" title=\"sdd\"></a>sdd</h2><p>leveldb的设计包括其基于的LSM的存储结构，完全是为了优化机械硬盘存储而生的,尽可能避免随机写，读也是以block为单位进行读取并缓存的(默认4k，这个包括其他option都在<code>option.h</code>中进行调整),compact的时机选取和估算都是以hdd的磁盘寻道延迟为考量的，也没有考虑过利用ssd随机存取的特性，所以如果以sdd为存储介质，并不是很推荐使用leveldb。</p>\n<h2 id=\"写放大\"><a href=\"#写放大\" class=\"headerlink\" title=\"写放大\"></a>写放大</h2><p>写入可能会造成compaction，也就是一次的写入可能会造成后台读入十多个文件，然后在内存中进行合并操作并输出到某几个文件，具体的写放大没有算过，但是对于kv尺寸比较大的数据业务而言，compact的触发会比较频繁，即使调高memtable容量或者加大单个文件容量，也会在compaction时造成很大的延迟, 可以查到的改进策略主要是kv分开存储，key走lsm，value走wal，<a href=\"https://www.usenix.org/system/files/conference/fast16/fast16-papers-lu.pdf\">如这篇论文</a>, 优点是减少写放大，缺点的话应该是value的gc处理可能会引起较多的读写惩罚了。据说rocksdb对ssd是有优化的，ceph默认的bluefs使用的也是rocksdb，下次研究一下它是如何改进的。</p>\n<h2 id=\"缺点总结\"><a href=\"#缺点总结\" class=\"headerlink\" title=\"缺点总结\"></a>缺点总结</h2><p>不过总的来说，在ssd，nvme，甚至是pmem大行其道的今天，以及未来，我相信随机读写的开销会越来越小，以至于为高性能而生的LSM的这种化随机为顺序的存储模式将会成为一种过去。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>写在前面，优秀的leveldb分析已经很多了，想要看梗概的人可以直接看<a href=\"https://catkang.github.io/2017/01/07/leveldb-summary.html\">庖丁解LevelDB</a>这个系列的文章。</p>\n<p>花了一周时间把leveldb的所有代码逐行解析了一遍，除了那些test文件，可累死我了，大多数文件只有不到300行还行，<code>db_impl.cc</code> 和<code>version_set.cc</code>这两个1500行的文件最累，虽说文件函数逻辑清晰，但自己写的时候还是避免这种过长的文件吧，前后联系看到时候特别累，当然比起ceph的bluestore单个文件1w多行而言仍算是小巫见大巫了，这个留作下次分析。这个level系列的几个blog主要是对之前详细分析的一个总结，并不会在这里逐行解析，也没这个必要，leveldb的精髓是其主要思想，而不是里面的辅助函数，如env_posix层。代码总有效行数，从<code>cloc</code>来看，大概在17000行左右，分析的路线从和用户最相关的地方开始，也就是读写，然后引出读写中牵涉的部分，如wal，memtable，table，block，cache，之后讨论version以及compaction，最后通过dbimpl进行总结。</p>","more":"<h1 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h1><p>在分析开始之前，先谈一下缺点，再好的项目，也只能在其特定的应用场景大放光彩。</p>\n<h2 id=\"sdd\"><a href=\"#sdd\" class=\"headerlink\" title=\"sdd\"></a>sdd</h2><p>leveldb的设计包括其基于的LSM的存储结构，完全是为了优化机械硬盘存储而生的,尽可能避免随机写，读也是以block为单位进行读取并缓存的(默认4k，这个包括其他option都在<code>option.h</code>中进行调整),compact的时机选取和估算都是以hdd的磁盘寻道延迟为考量的，也没有考虑过利用ssd随机存取的特性，所以如果以sdd为存储介质，并不是很推荐使用leveldb。</p>\n<h2 id=\"写放大\"><a href=\"#写放大\" class=\"headerlink\" title=\"写放大\"></a>写放大</h2><p>写入可能会造成compaction，也就是一次的写入可能会造成后台读入十多个文件，然后在内存中进行合并操作并输出到某几个文件，具体的写放大没有算过，但是对于kv尺寸比较大的数据业务而言，compact的触发会比较频繁，即使调高memtable容量或者加大单个文件容量，也会在compaction时造成很大的延迟, 可以查到的改进策略主要是kv分开存储，key走lsm，value走wal，<a href=\"https://www.usenix.org/system/files/conference/fast16/fast16-papers-lu.pdf\">如这篇论文</a>, 优点是减少写放大，缺点的话应该是value的gc处理可能会引起较多的读写惩罚了。据说rocksdb对ssd是有优化的，ceph默认的bluefs使用的也是rocksdb，下次研究一下它是如何改进的。</p>\n<h2 id=\"缺点总结\"><a href=\"#缺点总结\" class=\"headerlink\" title=\"缺点总结\"></a>缺点总结</h2><p>不过总的来说，在ssd，nvme，甚至是pmem大行其道的今天，以及未来，我相信随机读写的开销会越来越小，以至于为高性能而生的LSM的这种化随机为顺序的存储模式将会成为一种过去。</p>"},{"title":"leveldb 读写(二)","toc":true,"date":"2020-08-16T09:44:51.000Z","_content":"\n\n# 概述\n\nleveldb的写全都是通过WriteBatch完成的，读则是Get接口，这些内部除了准备阶段，其他全都是可以并行的部分，也不必担心rw的过程中如果有其他的rw发生，或者compaction发生而导致文件的消失，首先写入是一次性的，不存在写入的文件还可以修改；其次，MVCC的模式使得那些正在被查询或者用来compaction的版本不会被意外删除，所以get和compaction不会因为文件内容错乱或者文件不存在而发生错误。\n<!--more-->\n## Write\n\n不论是Put，还是Delete，都是包装成WriteBatch结构下发的，当然你也可以直接使用writebatch，一个writebatch中的数据可以保证是写在一起的，并且一次性写完的。\n\n- 准备工作: 所有的写会在Write中通过mutex进行序列化，只有排在开头的写可以继续下去，其他写必须等待。而可以继续下去的写也不是只写自己，这样就不能和好的利用批量写的特性了(其实这里的批量写并不是写sstable，只不过是写wal的时候的批量写，但同样也是需要写硬盘的，批量会更快一点), 这里会首先利用`MakeRoomForWrite`检查是否需要启动compaction并且等待完成，这里有一个平摊延迟的策略，就是L0文件多于softlimit的时候，会主动延迟1ms,这个是为了让compaction有机会运行，也是为了不至于写得过快导致compaction后面赶不上，结果导致最后触发hardlimit的write延迟过高，造成整体延迟抖动过大。这段的等待会释放锁，让其他的write有机会在期间加入。在通过size检查后，使用`BuildBatchGroup`把在之前等待期间也加入的writebatch合并到一个writebatch中。\n\n- 开始write: 这里会释放锁，因为memtable是读可并发的。\n    1. 写先要写入wal中，这个是为了在每次启动的时候可以恢复memtable的内容。wal的结构也是很简单的，只有一个限制，就是每条记录都必须满足小于kBlockSize大小, 因此，对于过长的record，需要切分，这也就有了full,first,middle,last几种record类型，每条record通过头部的crc，长度，type来分隔。\n    2. 写完wal之后，就是memtable了，这个本质上就是一个skiplist，skiplist是一种依据概率形成的数据结构，拥有与红黑树同等级的查询和插入复杂度，但是去除了节点旋转平衡的开销，代价是需要概率来保证查询复杂度O(lg N), leveldb的skiplist不需要支持删除操作，也减少了很多复杂性，skiplist利用了atomic操作实现了一写多读的并发。到了这一步之后本次写就不会触发compaction了，而是在下次写的时候在MakeRoomForWrite里会触发，或者在重新打开db的时候的log recover的时候会触发。\n\n- 收尾工作: 成功写完后，会对group中的每个写都发送signal通知完成，同时通知writers中接下去的head的write继续执行，然后本次write返回。\n\n## Read\n\nRead 由Get操作完成，具体的操作是首先记录本次Get能够接受的最高的seq(从snapshot参数中获取),这个实现了version控制，然后对需要访问的memtable，immtable(这个只有在write的时候才会触发产生，并且只要一产生就会进入compaction流程，所以这是一个暂时性质的东西)和current version进行引用获取，通过这个操作，涉及的所有东西都不会被其他线程擅自删除了，而是会在最终引用归零的时候删除，也正是因为如此，实际内存中存在的memtable在某一时刻可能是多余两个的。假设某个get正在进行并且引用了某个imm，同时一个write触发的imm的compaction结束了，那么write方会unref这个imm，但是imm被Get引用，不会删除，如果Get进程特别慢，在这期间mem又满了，转换了imm，那么内存中当前就会存在超过2个memtable结构，当然这种极高负载的情况在leveldb容量不是非常大或者磁盘故障的情况下不太可能发生。\n\nGet会依序从mem，imm，自低到高每一层的sstable来搜索，同时通过GetStats记录seek操作行为，这个是为了感知本次查询是否遍历了过多的文件，根据`version_set.cc Apply`中的注释，过多的seek时间等同于一次compaction，所以get过程中多余的seek会统计起来，达到一定程度就触发一次compaction，以提高今后Get的命中率。\n\n## 总结\n\n总的来说，读写结构清晰，而且不存在其他隐形的常驻后端进程的干扰，简洁高效, 也有助于代码分析。\n","source":"_posts/leveldb-rw.md","raw":"---\ntitle: leveldb 读写(二)\ntags:\n  - leveldb\ntoc: true\ncategories:\n  - leveldb\ndate: 2020-08-16 17:44:51\n---\n\n\n# 概述\n\nleveldb的写全都是通过WriteBatch完成的，读则是Get接口，这些内部除了准备阶段，其他全都是可以并行的部分，也不必担心rw的过程中如果有其他的rw发生，或者compaction发生而导致文件的消失，首先写入是一次性的，不存在写入的文件还可以修改；其次，MVCC的模式使得那些正在被查询或者用来compaction的版本不会被意外删除，所以get和compaction不会因为文件内容错乱或者文件不存在而发生错误。\n<!--more-->\n## Write\n\n不论是Put，还是Delete，都是包装成WriteBatch结构下发的，当然你也可以直接使用writebatch，一个writebatch中的数据可以保证是写在一起的，并且一次性写完的。\n\n- 准备工作: 所有的写会在Write中通过mutex进行序列化，只有排在开头的写可以继续下去，其他写必须等待。而可以继续下去的写也不是只写自己，这样就不能和好的利用批量写的特性了(其实这里的批量写并不是写sstable，只不过是写wal的时候的批量写，但同样也是需要写硬盘的，批量会更快一点), 这里会首先利用`MakeRoomForWrite`检查是否需要启动compaction并且等待完成，这里有一个平摊延迟的策略，就是L0文件多于softlimit的时候，会主动延迟1ms,这个是为了让compaction有机会运行，也是为了不至于写得过快导致compaction后面赶不上，结果导致最后触发hardlimit的write延迟过高，造成整体延迟抖动过大。这段的等待会释放锁，让其他的write有机会在期间加入。在通过size检查后，使用`BuildBatchGroup`把在之前等待期间也加入的writebatch合并到一个writebatch中。\n\n- 开始write: 这里会释放锁，因为memtable是读可并发的。\n    1. 写先要写入wal中，这个是为了在每次启动的时候可以恢复memtable的内容。wal的结构也是很简单的，只有一个限制，就是每条记录都必须满足小于kBlockSize大小, 因此，对于过长的record，需要切分，这也就有了full,first,middle,last几种record类型，每条record通过头部的crc，长度，type来分隔。\n    2. 写完wal之后，就是memtable了，这个本质上就是一个skiplist，skiplist是一种依据概率形成的数据结构，拥有与红黑树同等级的查询和插入复杂度，但是去除了节点旋转平衡的开销，代价是需要概率来保证查询复杂度O(lg N), leveldb的skiplist不需要支持删除操作，也减少了很多复杂性，skiplist利用了atomic操作实现了一写多读的并发。到了这一步之后本次写就不会触发compaction了，而是在下次写的时候在MakeRoomForWrite里会触发，或者在重新打开db的时候的log recover的时候会触发。\n\n- 收尾工作: 成功写完后，会对group中的每个写都发送signal通知完成，同时通知writers中接下去的head的write继续执行，然后本次write返回。\n\n## Read\n\nRead 由Get操作完成，具体的操作是首先记录本次Get能够接受的最高的seq(从snapshot参数中获取),这个实现了version控制，然后对需要访问的memtable，immtable(这个只有在write的时候才会触发产生，并且只要一产生就会进入compaction流程，所以这是一个暂时性质的东西)和current version进行引用获取，通过这个操作，涉及的所有东西都不会被其他线程擅自删除了，而是会在最终引用归零的时候删除，也正是因为如此，实际内存中存在的memtable在某一时刻可能是多余两个的。假设某个get正在进行并且引用了某个imm，同时一个write触发的imm的compaction结束了，那么write方会unref这个imm，但是imm被Get引用，不会删除，如果Get进程特别慢，在这期间mem又满了，转换了imm，那么内存中当前就会存在超过2个memtable结构，当然这种极高负载的情况在leveldb容量不是非常大或者磁盘故障的情况下不太可能发生。\n\nGet会依序从mem，imm，自低到高每一层的sstable来搜索，同时通过GetStats记录seek操作行为，这个是为了感知本次查询是否遍历了过多的文件，根据`version_set.cc Apply`中的注释，过多的seek时间等同于一次compaction，所以get过程中多余的seek会统计起来，达到一定程度就触发一次compaction，以提高今后Get的命中率。\n\n## 总结\n\n总的来说，读写结构清晰，而且不存在其他隐形的常驻后端进程的干扰，简洁高效, 也有助于代码分析。\n","slug":"leveldb-rw","published":1,"updated":"2020-08-16T09:44:52.006Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke1i6ki7000354kg6a8lhjac","content":"<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>leveldb的写全都是通过WriteBatch完成的，读则是Get接口，这些内部除了准备阶段，其他全都是可以并行的部分，也不必担心rw的过程中如果有其他的rw发生，或者compaction发生而导致文件的消失，首先写入是一次性的，不存在写入的文件还可以修改；其次，MVCC的模式使得那些正在被查询或者用来compaction的版本不会被意外删除，所以get和compaction不会因为文件内容错乱或者文件不存在而发生错误。</p>\n<a id=\"more\"></a>\n<h2 id=\"Write\"><a href=\"#Write\" class=\"headerlink\" title=\"Write\"></a>Write</h2><p>不论是Put，还是Delete，都是包装成WriteBatch结构下发的，当然你也可以直接使用writebatch，一个writebatch中的数据可以保证是写在一起的，并且一次性写完的。</p>\n<ul>\n<li><p>准备工作: 所有的写会在Write中通过mutex进行序列化，只有排在开头的写可以继续下去，其他写必须等待。而可以继续下去的写也不是只写自己，这样就不能和好的利用批量写的特性了(其实这里的批量写并不是写sstable，只不过是写wal的时候的批量写，但同样也是需要写硬盘的，批量会更快一点), 这里会首先利用<code>MakeRoomForWrite</code>检查是否需要启动compaction并且等待完成，这里有一个平摊延迟的策略，就是L0文件多于softlimit的时候，会主动延迟1ms,这个是为了让compaction有机会运行，也是为了不至于写得过快导致compaction后面赶不上，结果导致最后触发hardlimit的write延迟过高，造成整体延迟抖动过大。这段的等待会释放锁，让其他的write有机会在期间加入。在通过size检查后，使用<code>BuildBatchGroup</code>把在之前等待期间也加入的writebatch合并到一个writebatch中。</p>\n</li>\n<li><p>开始write: 这里会释放锁，因为memtable是读可并发的。</p>\n<ol>\n<li>写先要写入wal中，这个是为了在每次启动的时候可以恢复memtable的内容。wal的结构也是很简单的，只有一个限制，就是每条记录都必须满足小于kBlockSize大小, 因此，对于过长的record，需要切分，这也就有了full,first,middle,last几种record类型，每条record通过头部的crc，长度，type来分隔。</li>\n<li>写完wal之后，就是memtable了，这个本质上就是一个skiplist，skiplist是一种依据概率形成的数据结构，拥有与红黑树同等级的查询和插入复杂度，但是去除了节点旋转平衡的开销，代价是需要概率来保证查询复杂度O(lg N), leveldb的skiplist不需要支持删除操作，也减少了很多复杂性，skiplist利用了atomic操作实现了一写多读的并发。到了这一步之后本次写就不会触发compaction了，而是在下次写的时候在MakeRoomForWrite里会触发，或者在重新打开db的时候的log recover的时候会触发。</li>\n</ol>\n</li>\n<li><p>收尾工作: 成功写完后，会对group中的每个写都发送signal通知完成，同时通知writers中接下去的head的write继续执行，然后本次write返回。</p>\n</li>\n</ul>\n<h2 id=\"Read\"><a href=\"#Read\" class=\"headerlink\" title=\"Read\"></a>Read</h2><p>Read 由Get操作完成，具体的操作是首先记录本次Get能够接受的最高的seq(从snapshot参数中获取),这个实现了version控制，然后对需要访问的memtable，immtable(这个只有在write的时候才会触发产生，并且只要一产生就会进入compaction流程，所以这是一个暂时性质的东西)和current version进行引用获取，通过这个操作，涉及的所有东西都不会被其他线程擅自删除了，而是会在最终引用归零的时候删除，也正是因为如此，实际内存中存在的memtable在某一时刻可能是多余两个的。假设某个get正在进行并且引用了某个imm，同时一个write触发的imm的compaction结束了，那么write方会unref这个imm，但是imm被Get引用，不会删除，如果Get进程特别慢，在这期间mem又满了，转换了imm，那么内存中当前就会存在超过2个memtable结构，当然这种极高负载的情况在leveldb容量不是非常大或者磁盘故障的情况下不太可能发生。</p>\n<p>Get会依序从mem，imm，自低到高每一层的sstable来搜索，同时通过GetStats记录seek操作行为，这个是为了感知本次查询是否遍历了过多的文件，根据<code>version_set.cc Apply</code>中的注释，过多的seek时间等同于一次compaction，所以get过程中多余的seek会统计起来，达到一定程度就触发一次compaction，以提高今后Get的命中率。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>总的来说，读写结构清晰，而且不存在其他隐形的常驻后端进程的干扰，简洁高效, 也有助于代码分析。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>leveldb的写全都是通过WriteBatch完成的，读则是Get接口，这些内部除了准备阶段，其他全都是可以并行的部分，也不必担心rw的过程中如果有其他的rw发生，或者compaction发生而导致文件的消失，首先写入是一次性的，不存在写入的文件还可以修改；其次，MVCC的模式使得那些正在被查询或者用来compaction的版本不会被意外删除，所以get和compaction不会因为文件内容错乱或者文件不存在而发生错误。</p>","more":"<h2 id=\"Write\"><a href=\"#Write\" class=\"headerlink\" title=\"Write\"></a>Write</h2><p>不论是Put，还是Delete，都是包装成WriteBatch结构下发的，当然你也可以直接使用writebatch，一个writebatch中的数据可以保证是写在一起的，并且一次性写完的。</p>\n<ul>\n<li><p>准备工作: 所有的写会在Write中通过mutex进行序列化，只有排在开头的写可以继续下去，其他写必须等待。而可以继续下去的写也不是只写自己，这样就不能和好的利用批量写的特性了(其实这里的批量写并不是写sstable，只不过是写wal的时候的批量写，但同样也是需要写硬盘的，批量会更快一点), 这里会首先利用<code>MakeRoomForWrite</code>检查是否需要启动compaction并且等待完成，这里有一个平摊延迟的策略，就是L0文件多于softlimit的时候，会主动延迟1ms,这个是为了让compaction有机会运行，也是为了不至于写得过快导致compaction后面赶不上，结果导致最后触发hardlimit的write延迟过高，造成整体延迟抖动过大。这段的等待会释放锁，让其他的write有机会在期间加入。在通过size检查后，使用<code>BuildBatchGroup</code>把在之前等待期间也加入的writebatch合并到一个writebatch中。</p>\n</li>\n<li><p>开始write: 这里会释放锁，因为memtable是读可并发的。</p>\n<ol>\n<li>写先要写入wal中，这个是为了在每次启动的时候可以恢复memtable的内容。wal的结构也是很简单的，只有一个限制，就是每条记录都必须满足小于kBlockSize大小, 因此，对于过长的record，需要切分，这也就有了full,first,middle,last几种record类型，每条record通过头部的crc，长度，type来分隔。</li>\n<li>写完wal之后，就是memtable了，这个本质上就是一个skiplist，skiplist是一种依据概率形成的数据结构，拥有与红黑树同等级的查询和插入复杂度，但是去除了节点旋转平衡的开销，代价是需要概率来保证查询复杂度O(lg N), leveldb的skiplist不需要支持删除操作，也减少了很多复杂性，skiplist利用了atomic操作实现了一写多读的并发。到了这一步之后本次写就不会触发compaction了，而是在下次写的时候在MakeRoomForWrite里会触发，或者在重新打开db的时候的log recover的时候会触发。</li>\n</ol>\n</li>\n<li><p>收尾工作: 成功写完后，会对group中的每个写都发送signal通知完成，同时通知writers中接下去的head的write继续执行，然后本次write返回。</p>\n</li>\n</ul>\n<h2 id=\"Read\"><a href=\"#Read\" class=\"headerlink\" title=\"Read\"></a>Read</h2><p>Read 由Get操作完成，具体的操作是首先记录本次Get能够接受的最高的seq(从snapshot参数中获取),这个实现了version控制，然后对需要访问的memtable，immtable(这个只有在write的时候才会触发产生，并且只要一产生就会进入compaction流程，所以这是一个暂时性质的东西)和current version进行引用获取，通过这个操作，涉及的所有东西都不会被其他线程擅自删除了，而是会在最终引用归零的时候删除，也正是因为如此，实际内存中存在的memtable在某一时刻可能是多余两个的。假设某个get正在进行并且引用了某个imm，同时一个write触发的imm的compaction结束了，那么write方会unref这个imm，但是imm被Get引用，不会删除，如果Get进程特别慢，在这期间mem又满了，转换了imm，那么内存中当前就会存在超过2个memtable结构，当然这种极高负载的情况在leveldb容量不是非常大或者磁盘故障的情况下不太可能发生。</p>\n<p>Get会依序从mem，imm，自低到高每一层的sstable来搜索，同时通过GetStats记录seek操作行为，这个是为了感知本次查询是否遍历了过多的文件，根据<code>version_set.cc Apply</code>中的注释，过多的seek时间等同于一次compaction，所以get过程中多余的seek会统计起来，达到一定程度就触发一次compaction，以提高今后Get的命中率。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>总的来说，读写结构清晰，而且不存在其他隐形的常驻后端进程的干扰，简洁高效, 也有助于代码分析。</p>"},{"title":"leveldb 表(三)","toc":true,"date":"2020-08-16T09:44:54.000Z","_content":"\n\n# 概述\n\n这篇主要分析一下table，block相关的读写操作，同时一并分析各种iterator的使用。\n<!--more-->\n## block\n\n具体结构见block_builder.cc 的开头注释描述。<br/>\n要谈table，就要先谈table的最小一次性内存读入单位，也就是block，每个table都有自己的block cache,这样就不用频繁读取磁盘了。每个block内根据`restart_interval`切分为几块，这样做的目的是减少每个key需要存储的部分的长度，由于sstable中是顺序存储的，所以前后key都有相似的前缀，所以相邻key中后面那个会记录和之前那个相同的部分长度，之后才是自身独特的部分，然后是value，当然这样的后果是，要找到一个key的完整部分，需要遍历所有key，这就失去了顺序排列带来的可以二分查找的好处了，作为速度和空间利用的折中，使用restartpoint，也就是每隔n个记录，就强制放一个完整记录。所有restart index都记录在当前block的尾部。在查找的时候，如果是顺序依次查找，则只会一个一个向下解析，如果是反向查找，则需要利用restartindex跳回早先最近的完整key，然后向下查找，所以最坏情况需要查找interval个key。\n\n## table\n\ntable 的具体结构就是多个datablock的组合, 可以从`doc/table_format.md`中看到。在文件的结尾还会放上每个block在文件中偏移以及内部最大key对应的index block，这个的largestkey主要是seek的时候使用，因为iterator的seek操作的功能是返回比指定target更大的最小的key。除了这两种block，还有filterblock以及metaindexblock，这两个是用来实现bloomfilter过滤的工具，在构建table的时候也会同步构建，每个block对应一个fitlerblock中的一个entry，实际查找的时候会使用indexblock进行二分查找，找到对应的可能包含key的block，然后根据这个找到对应的filter，判断key是否存在，如果判断存在，那么再进入指定的block，利用restart index查找key，最后检查是否存在(因为bloomfilter会有false positive的情形)\n\n## cache\n\n每次读取的block内容，以及每次读取的table打开文件的描述符，都会保存在不同的lrucache中，cache由leveldb自己实现,也可以设置option跳过cache，使用的时候，增大cache可以减少读取需要消耗的时间。\n\n## iterator\n\niterator 是leveldb中一个很重要的数据遍历模型，在read，write，compaction中均处于核心地位，是各个组件如memtable，sstable, block之间交互的统一接口，使用继承来实现各自内部不同的细节，还通过嵌套实现比如多个文件中所有key的顺序遍历，整个db中数据的顺序非重复遍历等。\n\niter的思想其实很简单，就是遍历内部的数据，leveldb多数iter就是很简单的返回内存数据结构中存在的下一条或者上一条数据,顶多就是跳跃到上一个restartpoint之类的，但有两个特殊的iterator。\n- TwoLevelIterator, 这个利用两层iterator实现一个系列的文件的访问(如所有level1中文件的顺序访问, 首先是文件meta信息的iter的遍历，然后是对于某个iter信息，打开文件，返回内部的table的iter，用来遍历内部的每一条entry。  同样table的iter其实也是一个twoleveliterator，首先是根据indexblock找到block，然后是block内部的iterator。\n- MergingIterator, 这个用于融合多个iterator中的数据，每次返回最小的那个，如同merge排序法所做的一样。主要用于dbimple中的整体iterator，以及compaction的时候对于多个层级中文件的合并输出的过程，这个过程需要按顺序得到key，同时忽略掉seq上小的那个，保留最大的，也就是最近的那个，由于merge会把相同userkey的放在相邻的输出，所以过滤旧key变成了一件很容易的事情，而不是需要set这种数据结构去辅助的工作了。\n这两个是可以互相嵌套的，像twolevel其实就套了两层twolevel在使用，设计的很巧妙，使得整体架构一致性很高。\n","source":"_posts/leveldb-table.md","raw":"---\ntitle: leveldb 表(三)\ntags:\n  - leveldb\ntoc: true\ncategories:\n  - leveldb\ndate: 2020-08-16 17:44:54\n---\n\n\n# 概述\n\n这篇主要分析一下table，block相关的读写操作，同时一并分析各种iterator的使用。\n<!--more-->\n## block\n\n具体结构见block_builder.cc 的开头注释描述。<br/>\n要谈table，就要先谈table的最小一次性内存读入单位，也就是block，每个table都有自己的block cache,这样就不用频繁读取磁盘了。每个block内根据`restart_interval`切分为几块，这样做的目的是减少每个key需要存储的部分的长度，由于sstable中是顺序存储的，所以前后key都有相似的前缀，所以相邻key中后面那个会记录和之前那个相同的部分长度，之后才是自身独特的部分，然后是value，当然这样的后果是，要找到一个key的完整部分，需要遍历所有key，这就失去了顺序排列带来的可以二分查找的好处了，作为速度和空间利用的折中，使用restartpoint，也就是每隔n个记录，就强制放一个完整记录。所有restart index都记录在当前block的尾部。在查找的时候，如果是顺序依次查找，则只会一个一个向下解析，如果是反向查找，则需要利用restartindex跳回早先最近的完整key，然后向下查找，所以最坏情况需要查找interval个key。\n\n## table\n\ntable 的具体结构就是多个datablock的组合, 可以从`doc/table_format.md`中看到。在文件的结尾还会放上每个block在文件中偏移以及内部最大key对应的index block，这个的largestkey主要是seek的时候使用，因为iterator的seek操作的功能是返回比指定target更大的最小的key。除了这两种block，还有filterblock以及metaindexblock，这两个是用来实现bloomfilter过滤的工具，在构建table的时候也会同步构建，每个block对应一个fitlerblock中的一个entry，实际查找的时候会使用indexblock进行二分查找，找到对应的可能包含key的block，然后根据这个找到对应的filter，判断key是否存在，如果判断存在，那么再进入指定的block，利用restart index查找key，最后检查是否存在(因为bloomfilter会有false positive的情形)\n\n## cache\n\n每次读取的block内容，以及每次读取的table打开文件的描述符，都会保存在不同的lrucache中，cache由leveldb自己实现,也可以设置option跳过cache，使用的时候，增大cache可以减少读取需要消耗的时间。\n\n## iterator\n\niterator 是leveldb中一个很重要的数据遍历模型，在read，write，compaction中均处于核心地位，是各个组件如memtable，sstable, block之间交互的统一接口，使用继承来实现各自内部不同的细节，还通过嵌套实现比如多个文件中所有key的顺序遍历，整个db中数据的顺序非重复遍历等。\n\niter的思想其实很简单，就是遍历内部的数据，leveldb多数iter就是很简单的返回内存数据结构中存在的下一条或者上一条数据,顶多就是跳跃到上一个restartpoint之类的，但有两个特殊的iterator。\n- TwoLevelIterator, 这个利用两层iterator实现一个系列的文件的访问(如所有level1中文件的顺序访问, 首先是文件meta信息的iter的遍历，然后是对于某个iter信息，打开文件，返回内部的table的iter，用来遍历内部的每一条entry。  同样table的iter其实也是一个twoleveliterator，首先是根据indexblock找到block，然后是block内部的iterator。\n- MergingIterator, 这个用于融合多个iterator中的数据，每次返回最小的那个，如同merge排序法所做的一样。主要用于dbimple中的整体iterator，以及compaction的时候对于多个层级中文件的合并输出的过程，这个过程需要按顺序得到key，同时忽略掉seq上小的那个，保留最大的，也就是最近的那个，由于merge会把相同userkey的放在相邻的输出，所以过滤旧key变成了一件很容易的事情，而不是需要set这种数据结构去辅助的工作了。\n这两个是可以互相嵌套的，像twolevel其实就套了两层twolevel在使用，设计的很巧妙，使得整体架构一致性很高。\n","slug":"leveldb-table","published":1,"updated":"2020-08-16T09:44:54.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke1i6kib000654kggnvx9wh6","content":"<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>这篇主要分析一下table，block相关的读写操作，同时一并分析各种iterator的使用。</p>\n<a id=\"more\"></a>\n<h2 id=\"block\"><a href=\"#block\" class=\"headerlink\" title=\"block\"></a>block</h2><p>具体结构见block_builder.cc 的开头注释描述。<br/><br>要谈table，就要先谈table的最小一次性内存读入单位，也就是block，每个table都有自己的block cache,这样就不用频繁读取磁盘了。每个block内根据<code>restart_interval</code>切分为几块，这样做的目的是减少每个key需要存储的部分的长度，由于sstable中是顺序存储的，所以前后key都有相似的前缀，所以相邻key中后面那个会记录和之前那个相同的部分长度，之后才是自身独特的部分，然后是value，当然这样的后果是，要找到一个key的完整部分，需要遍历所有key，这就失去了顺序排列带来的可以二分查找的好处了，作为速度和空间利用的折中，使用restartpoint，也就是每隔n个记录，就强制放一个完整记录。所有restart index都记录在当前block的尾部。在查找的时候，如果是顺序依次查找，则只会一个一个向下解析，如果是反向查找，则需要利用restartindex跳回早先最近的完整key，然后向下查找，所以最坏情况需要查找interval个key。</p>\n<h2 id=\"table\"><a href=\"#table\" class=\"headerlink\" title=\"table\"></a>table</h2><p>table 的具体结构就是多个datablock的组合, 可以从<code>doc/table_format.md</code>中看到。在文件的结尾还会放上每个block在文件中偏移以及内部最大key对应的index block，这个的largestkey主要是seek的时候使用，因为iterator的seek操作的功能是返回比指定target更大的最小的key。除了这两种block，还有filterblock以及metaindexblock，这两个是用来实现bloomfilter过滤的工具，在构建table的时候也会同步构建，每个block对应一个fitlerblock中的一个entry，实际查找的时候会使用indexblock进行二分查找，找到对应的可能包含key的block，然后根据这个找到对应的filter，判断key是否存在，如果判断存在，那么再进入指定的block，利用restart index查找key，最后检查是否存在(因为bloomfilter会有false positive的情形)</p>\n<h2 id=\"cache\"><a href=\"#cache\" class=\"headerlink\" title=\"cache\"></a>cache</h2><p>每次读取的block内容，以及每次读取的table打开文件的描述符，都会保存在不同的lrucache中，cache由leveldb自己实现,也可以设置option跳过cache，使用的时候，增大cache可以减少读取需要消耗的时间。</p>\n<h2 id=\"iterator\"><a href=\"#iterator\" class=\"headerlink\" title=\"iterator\"></a>iterator</h2><p>iterator 是leveldb中一个很重要的数据遍历模型，在read，write，compaction中均处于核心地位，是各个组件如memtable，sstable, block之间交互的统一接口，使用继承来实现各自内部不同的细节，还通过嵌套实现比如多个文件中所有key的顺序遍历，整个db中数据的顺序非重复遍历等。</p>\n<p>iter的思想其实很简单，就是遍历内部的数据，leveldb多数iter就是很简单的返回内存数据结构中存在的下一条或者上一条数据,顶多就是跳跃到上一个restartpoint之类的，但有两个特殊的iterator。</p>\n<ul>\n<li>TwoLevelIterator, 这个利用两层iterator实现一个系列的文件的访问(如所有level1中文件的顺序访问, 首先是文件meta信息的iter的遍历，然后是对于某个iter信息，打开文件，返回内部的table的iter，用来遍历内部的每一条entry。  同样table的iter其实也是一个twoleveliterator，首先是根据indexblock找到block，然后是block内部的iterator。</li>\n<li>MergingIterator, 这个用于融合多个iterator中的数据，每次返回最小的那个，如同merge排序法所做的一样。主要用于dbimple中的整体iterator，以及compaction的时候对于多个层级中文件的合并输出的过程，这个过程需要按顺序得到key，同时忽略掉seq上小的那个，保留最大的，也就是最近的那个，由于merge会把相同userkey的放在相邻的输出，所以过滤旧key变成了一件很容易的事情，而不是需要set这种数据结构去辅助的工作了。<br>这两个是可以互相嵌套的，像twolevel其实就套了两层twolevel在使用，设计的很巧妙，使得整体架构一致性很高。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>这篇主要分析一下table，block相关的读写操作，同时一并分析各种iterator的使用。</p>","more":"<h2 id=\"block\"><a href=\"#block\" class=\"headerlink\" title=\"block\"></a>block</h2><p>具体结构见block_builder.cc 的开头注释描述。<br/><br>要谈table，就要先谈table的最小一次性内存读入单位，也就是block，每个table都有自己的block cache,这样就不用频繁读取磁盘了。每个block内根据<code>restart_interval</code>切分为几块，这样做的目的是减少每个key需要存储的部分的长度，由于sstable中是顺序存储的，所以前后key都有相似的前缀，所以相邻key中后面那个会记录和之前那个相同的部分长度，之后才是自身独特的部分，然后是value，当然这样的后果是，要找到一个key的完整部分，需要遍历所有key，这就失去了顺序排列带来的可以二分查找的好处了，作为速度和空间利用的折中，使用restartpoint，也就是每隔n个记录，就强制放一个完整记录。所有restart index都记录在当前block的尾部。在查找的时候，如果是顺序依次查找，则只会一个一个向下解析，如果是反向查找，则需要利用restartindex跳回早先最近的完整key，然后向下查找，所以最坏情况需要查找interval个key。</p>\n<h2 id=\"table\"><a href=\"#table\" class=\"headerlink\" title=\"table\"></a>table</h2><p>table 的具体结构就是多个datablock的组合, 可以从<code>doc/table_format.md</code>中看到。在文件的结尾还会放上每个block在文件中偏移以及内部最大key对应的index block，这个的largestkey主要是seek的时候使用，因为iterator的seek操作的功能是返回比指定target更大的最小的key。除了这两种block，还有filterblock以及metaindexblock，这两个是用来实现bloomfilter过滤的工具，在构建table的时候也会同步构建，每个block对应一个fitlerblock中的一个entry，实际查找的时候会使用indexblock进行二分查找，找到对应的可能包含key的block，然后根据这个找到对应的filter，判断key是否存在，如果判断存在，那么再进入指定的block，利用restart index查找key，最后检查是否存在(因为bloomfilter会有false positive的情形)</p>\n<h2 id=\"cache\"><a href=\"#cache\" class=\"headerlink\" title=\"cache\"></a>cache</h2><p>每次读取的block内容，以及每次读取的table打开文件的描述符，都会保存在不同的lrucache中，cache由leveldb自己实现,也可以设置option跳过cache，使用的时候，增大cache可以减少读取需要消耗的时间。</p>\n<h2 id=\"iterator\"><a href=\"#iterator\" class=\"headerlink\" title=\"iterator\"></a>iterator</h2><p>iterator 是leveldb中一个很重要的数据遍历模型，在read，write，compaction中均处于核心地位，是各个组件如memtable，sstable, block之间交互的统一接口，使用继承来实现各自内部不同的细节，还通过嵌套实现比如多个文件中所有key的顺序遍历，整个db中数据的顺序非重复遍历等。</p>\n<p>iter的思想其实很简单，就是遍历内部的数据，leveldb多数iter就是很简单的返回内存数据结构中存在的下一条或者上一条数据,顶多就是跳跃到上一个restartpoint之类的，但有两个特殊的iterator。</p>\n<ul>\n<li>TwoLevelIterator, 这个利用两层iterator实现一个系列的文件的访问(如所有level1中文件的顺序访问, 首先是文件meta信息的iter的遍历，然后是对于某个iter信息，打开文件，返回内部的table的iter，用来遍历内部的每一条entry。  同样table的iter其实也是一个twoleveliterator，首先是根据indexblock找到block，然后是block内部的iterator。</li>\n<li>MergingIterator, 这个用于融合多个iterator中的数据，每次返回最小的那个，如同merge排序法所做的一样。主要用于dbimple中的整体iterator，以及compaction的时候对于多个层级中文件的合并输出的过程，这个过程需要按顺序得到key，同时忽略掉seq上小的那个，保留最大的，也就是最近的那个，由于merge会把相同userkey的放在相邻的输出，所以过滤旧key变成了一件很容易的事情，而不是需要set这种数据结构去辅助的工作了。<br>这两个是可以互相嵌套的，像twolevel其实就套了两层twolevel在使用，设计的很巧妙，使得整体架构一致性很高。</li>\n</ul>"},{"title":"leveldb 版本控制及compaction实现(四)","toc":true,"date":"2020-08-16T09:44:57.000Z","_content":"\n\n# 概述\n\nleveldb的版本控制是通过snapshot完成的。snapshot其实即使一个数字，代表了当前允许查询的最大seq，相当轻量级。和版本相关的有几个数据结构:`version`, `version_set`, `version_edit`\n<!--more-->\n## Version\n\n这个代表一个单个的version，一个version中包含了本version的每个层级存在的文件,以及compaction相关的信息，这是一个纯内存的数据结构，链接进入`version_set`中，在读写的时候会被引用，然后保持在内存里，一旦无任何人引用，就会自动销毁。最新的version永远被current引用，保持不会销毁。\n\n## Version Set\n\n这个是所有处于被其他某些对象引用状态的version的集合，在remove file的时候，会参考这里面所有的文件，只有不在这里面且指定需要删除的文件才会被删除。\n\n## Version Edit\n\n这个表示了两个相邻version之间的文件差异，也是manifest文件中存储的每条记录的格式，最开始的一条version记录，无论是newdb开始的，还是某次打开之后重新写新的manifest以加速下次打开后recover过程的，也是通过转换成version edit结构写入manifest的。\n\n## compaction\n\n由于version控制实际理念很简单，这里就一并把compaction也讲掉吧, 每次触发compaction后，具体的执行线程里会查看是否手动指定了范围，如果是，那么在那个范围内的所有level从上到下都要执行一遍compaction；否则就是通过内部的Pick函数去选择哪个层的那个文件执行compaction。 这个函数会根据seek之后的状态修改(VersionSet::Builer::Apply中)，或者上一次compact之后当前version重新计算的每层的score(VersionSet::Finalize中)决定选择的key的范围。\n\n具体来说只要是和选定key范围重叠的当前层(L0会有这种情况，因为L0文件不是顺序不重叠的)和下一层的文件，都会包含进去，具体的选择策略中，还会尝试如果下一层中包含文件的整体范围应用到当前层后，加入的新文件造成的当前层compact key范围扩大之后，不会再次造成下层文件范围扩大，那么就选用这个更大的范围，主要目的应该是把level+1中选到的文件所对应的key更彻底的一次性和当前level合并掉。\n\n选择完成后，就会利用mergingiterator把所有输入文件中的key，通过排除不在需要保存的seq范围内的，其他的都一并保存下来，放入输出文件，要注意，输出之后，同层的文件都是按照internal key的顺序保存下来的,不存在范围重叠，但是存在同userkey但是不同seq的那些key，这是供不同version访问的。完成后，不需要的文件会unref，最终在无人引用的时候被删除。\n","source":"_posts/leveldb-version.md","raw":"---\ntitle: leveldb 版本控制及compaction实现(四)\ntags:\n  - leveldb\ntoc: true\ncategories:\n  - leveldb\ndate: 2020-08-16 17:44:57\n---\n\n\n# 概述\n\nleveldb的版本控制是通过snapshot完成的。snapshot其实即使一个数字，代表了当前允许查询的最大seq，相当轻量级。和版本相关的有几个数据结构:`version`, `version_set`, `version_edit`\n<!--more-->\n## Version\n\n这个代表一个单个的version，一个version中包含了本version的每个层级存在的文件,以及compaction相关的信息，这是一个纯内存的数据结构，链接进入`version_set`中，在读写的时候会被引用，然后保持在内存里，一旦无任何人引用，就会自动销毁。最新的version永远被current引用，保持不会销毁。\n\n## Version Set\n\n这个是所有处于被其他某些对象引用状态的version的集合，在remove file的时候，会参考这里面所有的文件，只有不在这里面且指定需要删除的文件才会被删除。\n\n## Version Edit\n\n这个表示了两个相邻version之间的文件差异，也是manifest文件中存储的每条记录的格式，最开始的一条version记录，无论是newdb开始的，还是某次打开之后重新写新的manifest以加速下次打开后recover过程的，也是通过转换成version edit结构写入manifest的。\n\n## compaction\n\n由于version控制实际理念很简单，这里就一并把compaction也讲掉吧, 每次触发compaction后，具体的执行线程里会查看是否手动指定了范围，如果是，那么在那个范围内的所有level从上到下都要执行一遍compaction；否则就是通过内部的Pick函数去选择哪个层的那个文件执行compaction。 这个函数会根据seek之后的状态修改(VersionSet::Builer::Apply中)，或者上一次compact之后当前version重新计算的每层的score(VersionSet::Finalize中)决定选择的key的范围。\n\n具体来说只要是和选定key范围重叠的当前层(L0会有这种情况，因为L0文件不是顺序不重叠的)和下一层的文件，都会包含进去，具体的选择策略中，还会尝试如果下一层中包含文件的整体范围应用到当前层后，加入的新文件造成的当前层compact key范围扩大之后，不会再次造成下层文件范围扩大，那么就选用这个更大的范围，主要目的应该是把level+1中选到的文件所对应的key更彻底的一次性和当前level合并掉。\n\n选择完成后，就会利用mergingiterator把所有输入文件中的key，通过排除不在需要保存的seq范围内的，其他的都一并保存下来，放入输出文件，要注意，输出之后，同层的文件都是按照internal key的顺序保存下来的,不存在范围重叠，但是存在同userkey但是不同seq的那些key，这是供不同version访问的。完成后，不需要的文件会unref，最终在无人引用的时候被删除。\n","slug":"leveldb-version","published":1,"updated":"2020-08-16T09:44:57.638Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke1i6kic000754kg6rwo0jm9","content":"<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>leveldb的版本控制是通过snapshot完成的。snapshot其实即使一个数字，代表了当前允许查询的最大seq，相当轻量级。和版本相关的有几个数据结构:<code>version</code>, <code>version_set</code>, <code>version_edit</code></p>\n<a id=\"more\"></a>\n<h2 id=\"Version\"><a href=\"#Version\" class=\"headerlink\" title=\"Version\"></a>Version</h2><p>这个代表一个单个的version，一个version中包含了本version的每个层级存在的文件,以及compaction相关的信息，这是一个纯内存的数据结构，链接进入<code>version_set</code>中，在读写的时候会被引用，然后保持在内存里，一旦无任何人引用，就会自动销毁。最新的version永远被current引用，保持不会销毁。</p>\n<h2 id=\"Version-Set\"><a href=\"#Version-Set\" class=\"headerlink\" title=\"Version Set\"></a>Version Set</h2><p>这个是所有处于被其他某些对象引用状态的version的集合，在remove file的时候，会参考这里面所有的文件，只有不在这里面且指定需要删除的文件才会被删除。</p>\n<h2 id=\"Version-Edit\"><a href=\"#Version-Edit\" class=\"headerlink\" title=\"Version Edit\"></a>Version Edit</h2><p>这个表示了两个相邻version之间的文件差异，也是manifest文件中存储的每条记录的格式，最开始的一条version记录，无论是newdb开始的，还是某次打开之后重新写新的manifest以加速下次打开后recover过程的，也是通过转换成version edit结构写入manifest的。</p>\n<h2 id=\"compaction\"><a href=\"#compaction\" class=\"headerlink\" title=\"compaction\"></a>compaction</h2><p>由于version控制实际理念很简单，这里就一并把compaction也讲掉吧, 每次触发compaction后，具体的执行线程里会查看是否手动指定了范围，如果是，那么在那个范围内的所有level从上到下都要执行一遍compaction；否则就是通过内部的Pick函数去选择哪个层的那个文件执行compaction。 这个函数会根据seek之后的状态修改(VersionSet::Builer::Apply中)，或者上一次compact之后当前version重新计算的每层的score(VersionSet::Finalize中)决定选择的key的范围。</p>\n<p>具体来说只要是和选定key范围重叠的当前层(L0会有这种情况，因为L0文件不是顺序不重叠的)和下一层的文件，都会包含进去，具体的选择策略中，还会尝试如果下一层中包含文件的整体范围应用到当前层后，加入的新文件造成的当前层compact key范围扩大之后，不会再次造成下层文件范围扩大，那么就选用这个更大的范围，主要目的应该是把level+1中选到的文件所对应的key更彻底的一次性和当前level合并掉。</p>\n<p>选择完成后，就会利用mergingiterator把所有输入文件中的key，通过排除不在需要保存的seq范围内的，其他的都一并保存下来，放入输出文件，要注意，输出之后，同层的文件都是按照internal key的顺序保存下来的,不存在范围重叠，但是存在同userkey但是不同seq的那些key，这是供不同version访问的。完成后，不需要的文件会unref，最终在无人引用的时候被删除。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>leveldb的版本控制是通过snapshot完成的。snapshot其实即使一个数字，代表了当前允许查询的最大seq，相当轻量级。和版本相关的有几个数据结构:<code>version</code>, <code>version_set</code>, <code>version_edit</code></p>","more":"<h2 id=\"Version\"><a href=\"#Version\" class=\"headerlink\" title=\"Version\"></a>Version</h2><p>这个代表一个单个的version，一个version中包含了本version的每个层级存在的文件,以及compaction相关的信息，这是一个纯内存的数据结构，链接进入<code>version_set</code>中，在读写的时候会被引用，然后保持在内存里，一旦无任何人引用，就会自动销毁。最新的version永远被current引用，保持不会销毁。</p>\n<h2 id=\"Version-Set\"><a href=\"#Version-Set\" class=\"headerlink\" title=\"Version Set\"></a>Version Set</h2><p>这个是所有处于被其他某些对象引用状态的version的集合，在remove file的时候，会参考这里面所有的文件，只有不在这里面且指定需要删除的文件才会被删除。</p>\n<h2 id=\"Version-Edit\"><a href=\"#Version-Edit\" class=\"headerlink\" title=\"Version Edit\"></a>Version Edit</h2><p>这个表示了两个相邻version之间的文件差异，也是manifest文件中存储的每条记录的格式，最开始的一条version记录，无论是newdb开始的，还是某次打开之后重新写新的manifest以加速下次打开后recover过程的，也是通过转换成version edit结构写入manifest的。</p>\n<h2 id=\"compaction\"><a href=\"#compaction\" class=\"headerlink\" title=\"compaction\"></a>compaction</h2><p>由于version控制实际理念很简单，这里就一并把compaction也讲掉吧, 每次触发compaction后，具体的执行线程里会查看是否手动指定了范围，如果是，那么在那个范围内的所有level从上到下都要执行一遍compaction；否则就是通过内部的Pick函数去选择哪个层的那个文件执行compaction。 这个函数会根据seek之后的状态修改(VersionSet::Builer::Apply中)，或者上一次compact之后当前version重新计算的每层的score(VersionSet::Finalize中)决定选择的key的范围。</p>\n<p>具体来说只要是和选定key范围重叠的当前层(L0会有这种情况，因为L0文件不是顺序不重叠的)和下一层的文件，都会包含进去，具体的选择策略中，还会尝试如果下一层中包含文件的整体范围应用到当前层后，加入的新文件造成的当前层compact key范围扩大之后，不会再次造成下层文件范围扩大，那么就选用这个更大的范围，主要目的应该是把level+1中选到的文件所对应的key更彻底的一次性和当前level合并掉。</p>\n<p>选择完成后，就会利用mergingiterator把所有输入文件中的key，通过排除不在需要保存的seq范围内的，其他的都一并保存下来，放入输出文件，要注意，输出之后，同层的文件都是按照internal key的顺序保存下来的,不存在范围重叠，但是存在同userkey但是不同seq的那些key，这是供不同version访问的。完成后，不需要的文件会unref，最终在无人引用的时候被删除。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cke1i6kic000754kg6rwo0jm9","category_id":"cke1i6ki9000454kgf4ge50e2","_id":"cke1i6kie000c54kg9r4ugzaz"},{"post_id":"cke1i6ki4000154kg085k87x1","category_id":"cke1i6ki9000454kgf4ge50e2","_id":"cke1i6kif000g54kg9kjs1r1g"},{"post_id":"cke1i6ki7000354kg6a8lhjac","category_id":"cke1i6ki9000454kgf4ge50e2","_id":"cke1i6kif000h54kg5sky1bif"},{"post_id":"cke1i6kib000654kggnvx9wh6","category_id":"cke1i6ki9000454kgf4ge50e2","_id":"cke1i6kig000j54kgcj2f0cqi"}],"PostTag":[{"post_id":"cke1i6kic000754kg6rwo0jm9","tag_id":"cke1i6kia000554kgcw4w0u5z","_id":"cke1i6kie000a54kgef06ajfr"},{"post_id":"cke1i6ki4000154kg085k87x1","tag_id":"cke1i6kia000554kgcw4w0u5z","_id":"cke1i6kie000b54kg9e62cyby"},{"post_id":"cke1i6ki7000354kg6a8lhjac","tag_id":"cke1i6kia000554kgcw4w0u5z","_id":"cke1i6kif000f54kgd5qb02ad"},{"post_id":"cke1i6kib000654kggnvx9wh6","tag_id":"cke1i6kia000554kgcw4w0u5z","_id":"cke1i6kig000i54kgf5z4dfyr"}],"Tag":[{"name":"leveldb","_id":"cke1i6kia000554kgcw4w0u5z"}]}}